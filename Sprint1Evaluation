--2.1 Select statements

2.1.1

SELECT distinct E.EMPLOYEE_ID,E.EMP_NAME,D.DEPT_ID,D.DEPT_NAME
FROM EMPLOYEE E, DEPARTMENT D
WHERE D.DEPT_ID=E.DEPT_ID
HAVING D.DEPT_NAME IS NOT NULL;


2.1.2

SELECT EMP_NAME, SALARY FROM EMPLOYEE;

--2.2 Where condition

2.2.1

SELECT EMPLOYEE_ID,EMP_NAME,SALARY FROM EMPLOYEE
WHERE SALARY < 500000;


2.2.2

SELECT EMPLOYEE_ID,EMP_NAME FROM EMPLOYEE
WHERE JOINING_DT < ('2015-01-01');


2.2.3

SELECT EMP_NAME,SALARY,MANAGER_ID FROM EMPLOYEE
WHERE manager_id in (100,120,145,149);


2.2.4

SELECT EMP_NAME FROM EMPLOYEE
WHERE emp_name like 'R%';


2.2.5

SELECT E1.EMP_NAME,E1.SALARY FROM EMPLOYEE E1
JOIN EMPLOYEE E2 ON E1.SALARY= E2.SALARY AND E1.EMP_NAME = E2.EMP_NAME;


2.2.6

SELECT E.EMPLOYEE_ID,E.EMP_NAME, D.DEPT_NAME FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPT_ID=D.DEPT_ID AND DEPT_NAME in ('ANALYST','DEVOPS');

--2.3 Group By, Order By and Having Conditions

2.3.1

SELECT COUNT(E.employee_id), D.dept_name 
FROM employee E, department D
WHERE E.DEPT_ID=D.DEPT_ID
GROUP BY D.dept_name;

2.3.2

SELECT emp_name, dept_id 
FROM employee 
WHERE dept_id in (20,50)
ORDER BY emp_name asc;

2.3.3

SELECT e.emp_name,e.dept_id,d.dept_name 
FROM employee e, department d
WHERE e.dept_id=d.dept_id
ORDER BY e.emp_name;


2.3.4

SELECT emp_name,dept_id,yrs_of_exp 
FROM employee
WHERE MARITAL_STATUS = 'FALSE'
ORDER BY dept_id;

--2.4 Joins

2.4.1

SELECT e.employee_id,e.emp_name,d.dept_name,l.state 
FROM employee e
LEFT JOIN department d
ON e.DEPT_ID = d.DEPT_ID
LEFT JOIN location l on d.loc_id = l.loc_id
WHERE l.state = 'HARYANA';


2.4.2

SELECT e.salary, e.emp_name,j.job_title
FROM employee e
RIGHT JOIN jobs j
ON e.job_id = j.job_id;




2.4.3

SELECT COUNT(e.employee_id) AS number_of_employees, j.job_title 
FROM employee e
INNER JOIN jobs j
ON e.job_id = j.job_id;

2.4.4

SELECT e.emp_name, d.dept_name, e.martial_status AS Unmarried 
FROM employee e
FULL JOIN department d
ON E.DEPT_ID=D.DEPT_ID
WHERE e.martial_status = 'False';




---2.4.4
select e.emp_name, d.dept_name, e.martial_status as Unmarried from employee e
full join department d
on E.DEPT_ID=D.DEPT_ID
where MARITAL_STATUS = 'False';


2.5 AGGREGATIONS

2.5.1
SELECT MAX(salary)-MIN(salary) AS Difference
FROM employee;



2.5.2
SELECT e.emp_name 
FROM employee e,dependents d 
WHERE e.salary>(SELECT avg(salary) FROM
                employee) AND e.dept_id=d.dept_id AND d.dept_name ='finance';



2.5.3
SELECT d.dept_name,MAX(e.salary),MIN (e.salary),AVG(e.salary) 
FROM employee e, dependents d 
WHERE e.dept_id=d.dept_id
GROUP BY d.dept_name;


--2.6 SQL Functions

2.6.1

SELECT SUBSTRING(emp_name, 1, 3 )
FROM employee;


2.6.2

SELECT emp_name FROM employee
WHERE emp_name LIKE '%H'
AND LENGTH (emp_name) = 6;
  

2.6.3

SELECT EMP_name,DOB, getdate() AS CurrentDate, year(getdate())-year(dob) AS age FROM Employee;


2.6.4

SELECT lower(emp_name), length(emp_name) AS name_length FROM employee;


2.6.5

SELECT emp_name,getdate() AS CurrentDate FROM employee;

2.6.6

SELECT CEIL(SALARY) FROM EMPLOYEE;

2.6.7

SELECT TO_CHAR(joining_dt, 'YYYY-MM-DD') FROM employee;

--2.7 Index and view

2.7.1

CREATE OR REPLACE VIEW Bangalore_employees(emp_name,phone_numb,manager_id) AS
SELECT e.emp_name,e.phone_numb,e.manager_id
FROM employee e
LEFT JOIN department d
ON E.DEPT_ID=D.DEPT_ID
LEFT JOIN location l ON d.loc_id = l.loc_id
WHERE l.city = 'GURGAON';



2.7.2

CREATE INDEX EMP_INDEX ON employee (emp_name,dob,martial_status);



--2.8 Sub Queries

2.8.1

SELECT * FROM employee
WHERE dept_id IN (SELECT dept_id FROM department
                  WHERE loc_id IN (SELECT loc_id FROM location
                                    WHERE loc_id NOT IN (101)));
2.8.2
                                                                      
SELECT * 
FROM employee
WHERE salary >= (SELECT AVG(salary)
                 FROM employee);


2.8.3

SELECT dept_name 
FROM department
WHERE dept_id IN (SELECT dept_id FROM employee
                   WHERE salary < 250000);
